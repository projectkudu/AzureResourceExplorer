# This is a basic workflow to help you get started with Actions

name: SyncSwaggerSpecs

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  schedule:
    - cron:  '0 * * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CreatePullRequestForSyncSwaggerSpecs:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env: 
      working-directory: 'SyncSwaggerSpecs'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
     
      - name: Setup .NET Core SDK 3.1.x
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: '3.1.x'
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: ${{ env.working-directory }}
      - name: Run SyncSwaggerSpecs
        id: syncSwaggerSpecs
        run: |
          dotnet run --configuration Release --no-restore
        working-directory: ${{ env.working-directory }}
      - name: Load Results
        id: loadResults
        run: |
          ls -la
          cat ./syncResult.json
          LOAD_RESULTS=`cat ./syncResult.json | jq -r '.Items[] | [.ResourceType,.Version, (.Files | join(","))] | @csv' | awk -v FS="," 'BEGIN{print "Swaggers updated"}{printf "- %s to %s\n",$1,$2}{for(i=3;i<=NF;i++){printf "  - %s\n",$i}}' | sed 's/\"//g'`
          echo $LOAD_RESULTS
          echo "LOAD_RESULTS<<EOF" >> $GITHUB_ENV
          echo "$LOAD_RESULTS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          rm ./syncResult.json
        working-directory: ${{ env.working-directory }}
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v3
        with:
          branch: sync-swagger-specs-automate
          delete-branch: true
          base: master
          title: 'Updated API Swagger for Microsoft.* Created by GitHub Action'
          commit-message: ${{ env.LOAD_RESULTS }}
          body: |
            ${{ env.LOAD_RESULTS }}

            Auto-generated by [GitHub Action][1]

            [1]: https://github.com/projectkudu/AzureResourceExplorer/blob/master/.github/workflows/SyncSwaggerSpecs.yml
          draft: false
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"

